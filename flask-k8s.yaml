apiVersion: v1
kind: Service
metadata:
  name: flask-example
  labels:
    run: flask-example
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8888
    protocol: TCP
    name: http
  selector:
    run: flask-example
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: flask-example
spec:
  replicas: 1 # tells deployment to run 2 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        run: flask-example
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8888"
    spec:
      containers:
      - name: flask-example
        image: stevenacoffman/flask_kubernetes_example:latest
        ports:
        - containerPort: 8888
        # resources:
        #   limits:
        #     cpu: 0.2
        #     memory: "10Mi"
        # livenessProbe:
        #   httpGet:
        #     path: /health
        #     port: 8888
        #     scheme: HTTP
        #   initialDelaySeconds: 5
        #   periodSeconds: 15
        #   timeoutSeconds: 5
        # readinessProbe:
        #   httpGet:
        #     path: /readiness
        #     port: 8888
        #     scheme: HTTP
        #   initialDelaySeconds: 5
        #   timeoutSeconds: 1
      - name: eureka-yup
        image: docker-registry.acorn.cirrostratus.org/playground/eureka-yup:latest
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - cat
            - /tmp/healthy
          initialDelaySeconds: 15
          periodSeconds: 30
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: APP_CONT_ID
          value: "K8S"
        - name: SGK_APP
          value: "flask-example"
        - name: SGK_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: seq-base
              key: sequoia.environment
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
